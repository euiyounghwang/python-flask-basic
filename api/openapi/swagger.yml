
openapi: 3.0.0
info:
  description: Basic project with Flask , Connexion and OpenApi 3
  version: 1.0.0
  title: Connexion example
  contact:
    email: marieuig@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html


servers:
  - url: http://0.0.0.0:5000/api
   
# Paths supported by the server application
paths:
  /db:
    get:
      operationId: api.controller.api_controller.omni_db_entity_all_json
      tags:
        - database
      summary: "The table data structure supported by the server application"
      description: "Read the list of people"
      responses:
        200:
          description: "Successful read table list operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
                # type: object
                # properties:
                #   fname:
                #     type: string
                #   lname:
                #     type: string
                #   timestamp:
                #     type: string
    post:
      operationId: api.controller.api_controller.omni_db_entity_create_json
      tags:
        - database
      summary: Create a new User
      description: Create a new User
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        201:
          description: User Created successfully
        500:
          description: "Unspecified search server error message"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
          
  /db/{_id}:
    get:
      operationId: api.controller.api_controller.omni_db_entity_fetchbyid_json
      tags:
        - database
      summary: Return an User with given id
      description: Return an User with given id
      parameters:
        - name: _id
          in: path
          description: User _id
          required: true
          schema:
            type: string
      responses:
        200: # status code
          description: Return an Item with given ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        
            
 
  
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        # create_date:
        #   type: string